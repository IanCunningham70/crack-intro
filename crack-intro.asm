                        //------------------------------------------------------------------------------
                        // old intro recoded in kickassembler for fun
                        //
                        // 10/05/2020, updated 2/11/2020 to get gitlab repo stuff
                        //------------------------------------------------------------------------------

BasicUpstart2(start)
                        //------------------------------------------------------------------------------
						// import music.
                        //------------------------------------------------------------------------------

                        .var music = LoadSid("Soldier_of_Fortune.sid")

                        //------------------------------------------------------------------------------
						// import standard library definitions
                        //------------------------------------------------------------------------------
						#import "standardLibrary.asm" 
                        //------------------------------------------------------------------------------

                        .var aline    = 1024+(40*20)
                        .var text     = $aa
                        .var char     = text+2
                        .var load     = $e0
                        .var save     = load+2

                        //------------------------------------------------------------------------------
                        *=$080d
                        //------------------------------------------------------------------------------
start:
                        lda #$08
                        sta screen
                        sta 646
                        jsr $e544

                        lda #$37
                        sta $01
                        jsr reset

                        sei
                        ldx #$ff
                        txs

                        lda #$00
                        sta border
                        sta screen
                        sta 650
                        lda #$80
                        sta 657

                        ldy #$00
                        lda #$19                        // empty character
zapscrn:                sta $0400,y
                        sta $0500,y
                        sta $0600,y
                        sta $0700,y
                        dey
                        bne zapscrn

                        jsr writer

                        jsr init

                        lda #$00
                        jsr music.init

                        lda #$7f
                        sta $dc0d
                        sta $dd0d
                        lda #$1b
                        sta screenmode
                        lda #$30
                        sta raster
                        lda #24
                        sta charset
                        lda #$01
                        sta irqflag
                        sta irqenable
                        ldx #<progirq
                        ldy #>progirq
                        stx $0314
                        sty $0315
                        ldx #<restore
                        ldy #>restore
                        stx $0318
                        sty $0319
                        cli
                        
                        lda #$20
                        sta fxb0

wait:                   jmp wait
                        
keyscan:                lda $dc01
                        and #$10
                        bne keyscan
                        
                        lda #$ad
                        sta byte0

                        lda #$20
                        sta fxb1
wait2:                  jmp wait2
                        //------------------------------------------------------------------------------

                        //------------------------------------------------------------------------------
restore:                rti
                        //------------------------------------------------------------------------------


                        //------------------------------------------------------------------------------
progirq:                lda #216
                        sta smoothpos
                        jsr music.play

byte0:
                        lda scroller

fxb0:                   lda fadeon                      // fade on the screen text

fxb1:                   lda fadeoff                     // fade off the screen text

                        ldx #(20*8)+$32                 // calculate line for top of scroller
                        cpx raster
                        bne *-3
                        ldx #$08
                        dex
                        bne *-1
                        lda smoothpos
                        and #$f0
                        ora xpos
                        sta smoothpos

                        ldx #(24*8)+$32                 // calculate end of scroller ( 4 lines down the screen )
                        cpx raster
                        bne *-3
                        ldx #$0a
                        dex
                        bne *-1
                        lda #216
                        sta smoothpos

                        lda c21
                        sta screen
                        lda c22
                        sta backcol0
                        lda c23
                        sta backcol1
                        
                        lda #$01
                        sta irqflag
                        jmp $ea31
                        //------------------------------------------------------------------------------
fadeoff:                lda del+1
                        sec
                        sbc #$05
                        and #$07
                        sta del+1
                        bcc foff1
                        rts
foff1:                  ldx num+1
                        cpx #$08
                        beq foff2
                        lda offtab,x
                        sta c21
                        sta c22
                        sta c23
                        inc num+1
                        rts
foff2:                  lda #$ad
                        sta wait2
                        sta fxb1
                        ldx colset
                        lda #$00
                        sta c21
                        sta c22
                        sta c23
                        rts
                        //------------------------------------------------------------------------------
fadeon:                 lda del
                        sec
                        sbc #$04
                        and #$07
                        sta del
                        bcc fon1
                        rts
fon1:                   ldx num
                        cpx #$08
                        beq fon2
                        lda ontab,x
                        sta c21
                        sta c22
                        sta c23
                        inc num
                        rts
fon2:                   lda #$ad
                        sta wait
                        sta fxb0
                        ldx colset
                        lda tab21,x
                        sta c21
                        lda tab22,x
                        sta c22
                        lda tab23,x
                        sta c23
                        lda #$20
                        sta byte0
                        rts
                        //------------------------------------------------------------------------------
scroller:               lda xpos
                        sec
                        sbc speed
                        and #$07
                        sta xpos
                        bcc scroll0
                        rts
scroll0:                ldx #$00
                        lda aline+1,x
                        sta aline,x
                        lda aline+41,x
                        sta aline+40,x
                        lda aline+81,x
                        sta aline+80,x
                        lda aline+121,x
                        sta aline+120,x
                        inx
                        cpx #39
                        bne scroll0+2
                        lda size2
                        cmp size
                        bne scroll2
                        jsr nextchar
                        jmp scroll3
scroll2:                lda char
                        clc
                        adc #$01
                        sta char
                        lda char+1
                        adc #$00
                        sta char+1
scroll3:                ldy #$00
                        lda (char),y
                        sta aline+39
                        ldy #40
                        lda (char),y
                        sta aline+79
                        ldy #80
                        lda (char),y
                        sta aline+119
                        ldy #120
                        lda (char),y
                        sta aline+159
                        inc size2
                        rts
                        //------------------------------------------------------------------------------
nextchar:               ldy #$00
                        sty size2
                        lda (text),y
                        bne nextc1
                        jsr init
                        jmp nextchar
nextc1:                 and #$3f
                        tay
                        lda tablo,y
                        sta char
                        lda tabhi,y
                        sta char+1
                        lda width,y
                        sta size
                        inc text
                        bne nextc3
                        inc text+1
nextc3:                 rts
                        //------------------------------------------------------------------------------
init:                   ldx #<scroll_text
                        ldy #>scroll_text
                        stx text
                        sty text+1
                        lda #$00
                        sta size
                        sta size2
                        rts
                        //------------------------------------------------------------------------------
writer:                 ldx #<$0400+(40*0)+6
                        ldy #>$0400+(40*0)+6
                        stx save
                        sty save+1
                        ldx #$00
st0:                    lda text1,x
                        beq st1
                        jsr write0
                        inx
                        jmp st0
                        //------------------------------------------------------------------------------
st1:                    ldx #<$0400+(40*5)+4
                        ldy #>$0400+(40*5)+4
                        stx save
                        sty save+1
                        ldx #$00
st1a:                   lda text2,x
                        beq st2
                        jsr write0
                        inx
                        jmp st1a
                        //------------------------------------------------------------------------------
st2:                    ldx #<$0400+(40*10)
                        ldy #>$0400+(40*10)
                        stx save
                        sty save+1
                        ldx #$00
st2a:                   lda text3,x
                        beq st3
                        jsr write0
                        inx
                        jmp st2a
                        //------------------------------------------------------------------------------
st3:                    ldx #<$0400+(40*15)
                        ldy #>$0400+(40*15)
                        stx save
                        sty save+1
                        ldx #$00
st3a:                   lda text4,x
                        beq st4
                        jsr write0
                        inx
                        jmp st3a
st4:                    rts
                        //------------------------------------------------------------------------------
write0:                 ldy #$00
                        sty size
                        sty size2
                        and #$3f
                        tay
                        lda tablo,y
                        sta load
                        lda tabhi,y
                        sta load+1
                        lda width,y
                        sta size
write1:                 lda size2
                        cmp size
                        bne write2
                        rts
write2:                 ldy #$00
                        lda (load),y
                        sta (save),y
                        ldy #40
                        lda (load),y
                        sta (save),y
                        ldy #80
                        lda (load),y
                        sta (save),y
                        ldy #120
                        lda (load),y
                        sta (save),y
                        inc size2
                        lda load
                        clc
                        adc #$01
                        sta load
                        lda load+1
                        adc #$00
                        sta load+1
                        lda save
                        clc
                        adc #$01
                        sta save
                        lda save+1
                        adc #$00
                        sta save+1
                        jmp write1
                        //------------------------------------------------------------------------------
reset:                  ldy #$00
                        tya
                        sta c21,y
                        iny
                        cpy #xpos-c21
                        bne reset+3
                        lda #$4c
                        sta wait
                        sta wait2
                        lda #$ad
                        sta fxb0
                        sta fxb1
                        sta byte0
                        rts
                        //------------------------------------------------------------------------------


                        //------------------------------------------------------------------------------
colset:                 .byte $02

c21:                    .byte $00
c22:                    .byte $00
c23:                    .byte $00

del:                    .byte $00,$00,$00
num:                    .byte $00,$00,$00
xpos:                   .byte $00
size:                   .byte $00
size2:                  .byte $00
speed:                  .byte $03

ontab:                  .byte $00,$06,$02,$04,$0a,$0f,$07,$01
offtab:                 .byte $01,$07,$0f,$0a,$04,$02,$06,$00
                        // screen text (4x4 characters)
text1:                  .text "  padua"
                        .byte $00
text2:                  .text "presents"
                        .byte $00
text3:                  .text "     unity"
                        .byte $00
text4:                  .text "    in 2020 "
                        .byte $00

                        *=$0f00 "tablo" // character lo table
tablo:                  .byte $64,$00,$04,$08,$0c,$10,$14,$18,$1c,$20,$a0,$a4,$a8,$22,$ac,$b0,$b4,$b8,$bc,$c0,$c4,$40,$44,$48
                        .byte $4e,$52,$56,$64,$64,$64,$64,$64,$64,$5e,$64,$64,$64,$64,$64,$60,$64,$64,$64,$64,$5c,$64,$5a,$64
                        .byte $02,$e0,$e2,$e6,$ea,$ee,$f2,$f6,$fa,$fe,$64,$64,$64,$64,$64,$64

                        *=$0f40 "tabhi" // character hi table
tabhi:                  .byte $29,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$28,$29,$29,$29
                        .byte $29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29
                        .byte $2a,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29,$29

                        *=$0f80 "width" // character width table
width:                  .byte $02,$04,$04,$04,$04,$04,$04,$04,$04,$02,$04,$04,$04,$06,$04,$04,$04,$04,$04,$04,$04,$04,$04,$06
                        .byte $04,$04,$04,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$04,$02,$02,$02,$02,$02,$02,$02,$02
                        .byte $04,$02,$04,$04,$04,$04,$04,$04,$04,$04,$02,$02,$02,$02,$02,$02

                        *=$0fc0 "tab21" // d021 colour table
tab21:                  .byte $06,$03,$0b,$05,$09,$09,$0f,$0f,$0f,$0f,$0a,$0d,$00,$00,$00,$00

                        *=$0fd0 "tab22" // d022 colour table
tab22:                  .byte $0f,$0f,$0f,$0f,$0a,$0d,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

                        *=$0fe0 "tab23" // d022 colour table
tab23:                  .byte $0e,$0a,$0c,$0d,$08,$05,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

                        //------------------------------------------------------------------------------
                        *=music.location "Music"
                        .fill music.size, music.getData(i)
                        //------------------------------------------------------------------------------

                        *=$2c00 "scroll_text"
scroll_text:
                        .text "      case returns with yet another piece of code that may be used for something.... or maybe not....."
                        .text "          "
                        .byte $00               // end byte of scroller.
                        //------------------------------------------------------------------------------

*=$2000                 "4x4 character set"     // created by deek
                        .byte $ff,$fc,$f1,$f6,$c6,$d8,$1a,$9a,$25,$5a,$a0,$82,$29,$a7,$a7,$a7
                        .byte $63,$94,$29,$0a,$a2,$68,$6a,$6a,$ff,$ff,$3f,$7f,$4f,$9f,$93,$9b
                        .byte $55,$6a,$60,$60,$62,$68,$6a,$6a,$55,$aa,$00,$2a,$25,$a4,$a7,$a4
                        .byte $55,$aa,$00,$80,$a2,$68,$6a,$6a,$3f,$4f,$9f,$93,$2b,$a7,$a7,$a7
                        .byte $c9,$5a,$a0,$80,$22,$89,$aa,$a4,$55,$aa,$00,$aa,$55,$3f,$ff,$ff
                        .byte $57,$a7,$27,$a7,$57,$ff,$ff,$ff,$55,$aa,$00,$2a,$25,$a7,$a7,$a7
                        .byte $a3,$94,$29,$02,$a2,$68,$6a,$6a,$57,$a7,$27,$27,$27,$a7,$a7,$a7
                        .byte $55,$aa,$00,$a0,$62,$68,$6a,$6a,$55,$aa,$00,$2a,$25,$a5,$a5,$a7
                        .byte $a6,$69,$66,$65,$69,$6c,$6f,$63,$65,$a6,$66,$65,$a6,$e6,$e5,$27
                        .byte $66,$a9,$66,$55,$55,$a0,$6f,$63,$6b,$a7,$67,$67,$a7,$e7,$e7,$27
                        .byte $66,$69,$66,$65,$69,$6c,$6f,$63,$65,$a6,$66,$65,$a6,$e6,$e5,$24
                        .byte $a6,$99,$66,$56,$56,$03,$bf,$63,$6b,$93,$9f,$6f,$9f,$93,$eb,$27
                        .byte $67,$a7,$67,$67,$a7,$e7,$e7,$24,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $67,$a7,$67,$67,$a7,$e7,$e7,$27,$65,$aa,$66,$99,$55,$2a,$e5,$24
                        .byte $55,$aa,$66,$99,$55,$aa,$55,$ff,$57,$a7,$67,$67,$a7,$a7,$57,$ff
                        .byte $55,$6a,$66,$65,$69,$60,$6f,$63,$57,$a7,$67,$67,$a7,$e7,$e7,$27
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$65,$aa,$66,$99,$55,$2a,$e5,$27
                        .byte $66,$a9,$66,$99,$55,$a0,$6f,$63,$60,$60,$68,$62,$6a,$69,$66,$65
                        .byte $27,$27,$a7,$27,$a7,$a7,$67,$67,$27,$24,$a5,$26,$a6,$a5,$66,$65
                        .byte $60,$60,$88,$22,$aa,$99,$66,$56,$27,$27,$a7,$2b,$9b,$93,$9f,$4f
                        .byte $60,$60,$68,$a2,$1a,$19,$da,$c6,$0a,$09,$8a,$22,$aa,$99,$66,$55
                        .byte $ff,$3f,$55,$aa,$aa,$99,$66,$55,$ff,$ff,$57,$a7,$a7,$a7,$67,$67
                        .byte $27,$27,$a5,$26,$a6,$a5,$66,$65,$27,$27,$a7,$2b,$93,$93,$9f,$4f
                        .byte $60,$60,$68,$a2,$aa,$99,$66,$55,$69,$65,$65,$65,$66,$69,$6a,$55
                        .byte $a7,$67,$67,$67,$67,$a7,$a7,$57,$69,$65,$6a,$55,$ff,$ff,$ff,$ff
                        .byte $a7,$67,$a7,$57,$ff,$ff,$ff,$ff,$a5,$65,$66,$65,$67,$a7,$a7,$57
                        .byte $9a,$69,$94,$a3,$ff,$ff,$ff,$ff,$7f,$3f,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $f6,$f1,$fc,$ff,$ff,$ff,$ff,$ff,$99,$a5,$5a,$29,$ff,$ff,$ff,$ff
                        .byte $99,$55,$aa,$55,$ff,$ff,$ff,$ff,$57,$a7,$27,$27,$27,$a7,$a7,$a4
                        .byte $29,$5a,$a0,$02,$29,$a7,$a7,$a7,$55,$aa,$00,$00,$a2,$68,$6a,$6a
                        .byte $3f,$4f,$9f,$93,$2b,$a7,$ab,$9b,$f1,$c6,$d8,$18,$a2,$68,$aa,$9a
                        .byte $55,$aa,$00,$02,$29,$a4,$a7,$a4,$55,$aa,$00,$aa,$55,$ff,$ff,$ff
                        .byte $55,$6a,$60,$6a,$55,$ff,$ff,$ff,$55,$aa,$00,$aa,$55,$f1,$fe,$fc
                        .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$fc,$a6,$99,$66,$96,$56,$00,$af,$63
                        .byte $65,$a6,$66,$65,$a5,$e6,$e5,$27,$a6,$99,$66,$5a,$69,$94,$a3,$ff
                        .byte $93,$9f,$4f,$7f,$3f,$ff,$ff,$ff,$67,$a7,$67,$67,$a7,$e7,$e7,$25
                        .byte $66,$69,$66,$65,$69,$6c,$6f,$5b,$1a,$d9,$c6,$f6,$f1,$fc,$ff,$ff
                        .byte $69,$9a,$66,$95,$a5,$5a,$29,$fd,$4f,$94,$69,$56,$56,$96,$83,$bf
                        .byte $ff,$ff,$3f,$7f,$4f,$9f,$93,$93,$ff,$ff,$55,$6a,$6a,$69,$66,$65
                        .byte $fe,$f1,$56,$aa,$aa,$99,$66,$55,$80,$80,$88,$22,$aa,$99,$66,$56
                        .byte $27,$27,$89,$22,$aa,$99,$66,$55,$26,$26,$89,$22,$aa,$99,$66,$55
                        .byte $a0,$00,$88,$a2,$aa,$9a,$66,$55,$27,$27,$97,$27,$a7,$a7,$67,$67
                        .byte $27,$24,$a7,$27,$a7,$a7,$67,$67,$fd,$f1,$56,$aa,$aa,$99,$66,$55
                        .byte $8f,$80,$88,$22,$aa,$99,$66,$56,$2b,$27,$a7,$2b,$93,$93,$9f,$4f
                        .byte $99,$65,$6a,$55,$ff,$ff,$ff,$ff,$55,$6a,$60,$60,$a2,$98,$1a,$1a
                        .byte $57,$a7,$27,$26,$26,$89,$a9,$a9,$55,$6a,$60,$60,$62,$88,$aa,$aa
                        .byte $57,$a7,$27,$2b,$9b,$93,$93,$93,$55,$aa,$00,$aa,$55,$f9,$f1,$f9
                        .byte $55,$aa,$00,$80,$a2,$88,$aa,$aa,$57,$a7,$27,$9b,$93,$9f,$6f,$4f
                        .byte $1a,$d9,$ea,$e6,$c6,$c6,$f6,$f6,$69,$99,$69,$56,$96,$c0,$ff,$3f
                        .byte $a6,$99,$a6,$56,$5a,$0e,$fe,$f2,$9f,$9f,$af,$6f,$4f,$4f,$7f,$7f
                        .byte $a6,$19,$da,$e6,$da,$18,$af,$63,$69,$9a,$66,$59,$55,$02,$e9,$24
                        .byte $66,$69,$a6,$19,$d9,$c6,$f1,$ff,$69,$9a,$66,$59,$55,$00,$7f,$63
                        .byte $a6,$99,$66,$95,$55,$02,$f5,$27,$67,$a7,$6b,$93,$9f,$4f,$3f,$ff
                        .byte $f6,$c6,$e6,$d9,$19,$98,$6f,$6f,$a6,$99,$69,$66,$64,$27,$9b,$93
                        .byte $7f,$bf,$3f,$ff,$ff,$ff,$ff,$ff,$66,$69,$66,$65,$69,$6a,$55,$ff
                        .byte $67,$a7,$67,$67,$a7,$a7,$57,$ff,$fa,$f9,$f1,$f1,$f1,$fd,$fd,$fe
                        .byte $00,$80,$88,$a2,$aa,$99,$a6,$95,$02,$09,$89,$29,$a9,$99,$69,$5a
                        .byte $bf,$bf,$3f,$3f,$3f,$ff,$ff,$ff,$26,$25,$a6,$2a,$aa,$99,$66,$55
                        .byte $fe,$fd,$f1,$f9,$f6,$c6,$e6,$d9,$60,$82,$8a,$a2,$aa,$99,$66,$55
                        .byte $9f,$6f,$55,$aa,$aa,$99,$66,$55,$fe,$fc,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $66,$65,$6a,$55,$ff,$ff,$ff,$ff,$66,$64,$a7,$57,$ff,$ff,$ff,$ff
                        .byte $19,$95,$6a,$55,$ff,$ff,$ff,$ff,$69,$65,$65,$59,$19,$65,$6a,$55
                        .byte $a7,$67,$67,$67,$93,$9f,$4f,$3f,$55,$aa,$00,$a8,$56,$f1,$fc,$fc
                        .byte $55,$aa,$00,$00,$88,$a2,$6a,$6a,$3f,$4f,$9f,$93,$ab,$27,$a7,$ab
                        .byte $55,$aa,$00,$a8,$56,$f1,$fe,$fc,$8f,$94,$29,$0a,$22,$88,$aa,$6a
                        .byte $55,$6a,$60,$60,$62,$68,$aa,$1a,$55,$aa,$00,$2a,$25,$a6,$a5,$a9
                        .byte $55,$aa,$00,$aa,$55,$ff,$ff,$bf,$55,$aa,$00,$aa,$55,$fe,$fe,$fe
                        .byte $55,$aa,$00,$80,$62,$68,$6a,$aa,$57,$a7,$27,$27,$2b,$9b,$93,$93
                        .byte $ff,$fc,$f1,$f6,$c6,$d8,$da,$da,$ff,$ff,$3f,$7f,$4f,$9f,$9f,$9f
                        .byte $ff,$ff,$ff,$ff,$fc,$f1,$f6,$c6,$fd,$f1,$c6,$1a,$65,$80,$ff,$30
                        .byte $99,$a6,$99,$66,$56,$09,$e4,$93,$93,$93,$9f,$4f,$7f,$3f,$ff,$ff
                        .byte $55,$6a,$66,$65,$69,$6a,$55,$ff,$55,$aa,$66,$99,$55,$aa,$55,$fc
                        .byte $69,$9a,$66,$55,$a9,$5a,$29,$ff,$66,$69,$a6,$19,$da,$c6,$f1,$ff
                        .byte $6a,$99,$66,$59,$55,$a8,$56,$f1,$63,$94,$69,$96,$5a,$0e,$ff,$8c
                        .byte $67,$a5,$66,$66,$a6,$e6,$e5,$24,$ff,$58,$a9,$56,$96,$c3,$bf,$63
                        .byte $ff,$ff,$3f,$4f,$9f,$93,$eb,$27,$f1,$f1,$f1,$f9,$f9,$fa,$c6,$c6
                        .byte $a6,$99,$95,$a6,$b3,$ff,$fc,$30,$93,$9f,$9f,$9f,$9f,$af,$af,$4f
                        .byte $d9,$da,$d9,$e6,$db,$1b,$af,$63,$99,$66,$59,$55,$00,$fe,$f9,$27
                        .byte $99,$66,$95,$56,$03,$ff,$bf,$63,$9f,$9f,$9f,$6f,$9f,$93,$eb,$27
                        .byte $69,$9a,$66,$95,$a5,$5a,$29,$ff,$d8,$18,$18,$a2,$6a,$69,$66,$65
                        .byte $02,$09,$89,$2a,$aa,$99,$66,$55,$4f,$3f,$55,$aa,$aa,$99,$66,$55
                        .byte $c6,$e6,$e8,$ea,$1a,$19,$1a,$99,$00,$02,$8a,$22,$aa,$9a,$66,$59
                        .byte $4f,$4f,$7f,$7f,$7f,$7f,$bf,$bf,$a9,$65,$6a,$55,$ff,$ff,$ff,$ff
                        .byte $99,$59,$a9,$55,$ff,$ff,$ff,$ff,$3f,$3f,$3f,$ff,$ff,$ff,$ff,$ff
                        .byte $7f,$7f,$7f,$7f,$7f,$ff,$ff,$ff,$f5,$f6,$f4,$f6,$f5,$ff,$ff,$ff
                        .byte $f5,$f6,$f6,$f6,$f5,$ff,$ff,$ff,$fd,$f1,$c6,$ea,$d5,$d0,$d5,$ff
                        .byte $99,$a6,$99,$66,$56,$09,$55,$ff,$93,$93,$9f,$4f,$7f,$3f,$3f,$ff
                        .byte $ff,$ff,$7f,$7f,$7f,$7f,$7f,$7f,$ff,$ff,$f5,$f6,$f6,$f5,$f6,$f5
                        .byte $ff,$d5,$da,$da,$da,$d9,$d9,$da,$ff,$55,$a9,$a9,$69,$99,$59,$69
                        .byte $7f,$7f,$7f,$7f,$ff,$ff,$ff,$ff,$f5,$f5,$f6,$f5,$ff,$ff,$ff,$ff
                        .byte $d9,$da,$d5,$ff,$ff,$ff,$ff,$ff,$59,$a9,$55,$ff,$ff,$ff,$ff,$ff
                        .byte $d6,$d6,$d0,$ff,$57,$53,$65,$95,$fa,$fe,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $06,$82,$e0,$ff,$ff,$ff,$ff,$ff,$d5,$55,$56,$55,$55,$59,$56,$55
                        .byte $a6,$62,$60,$ab,$4b,$63,$65,$95,$a2,$18,$5a,$5a,$56,$59,$5a,$56
                        .byte $a4,$6a,$53,$9b,$4b,$63,$65,$95,$a0,$28,$80,$ac,$a3,$60,$90,$a8
                        .byte $a8,$6a,$90,$a8,$62,$5e,$86,$f5,$82,$20,$03,$8c,$af,$2c,$ba,$f2
                        .byte $a0,$28,$80,$ac,$a3,$6e,$8a,$f6,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$a6
                        .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$a3,$ff,$ff,$ff,$fe,$fc,$fa,$fa,$f6
                        .byte $fe,$e0,$08,$8c,$8f,$03,$33,$0f,$a8,$6a,$92,$a8,$62,$5c,$86,$f5
                        .byte $ff,$2f,$8b,$2f,$0f,$8f,$23,$0b,$f9,$f7,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $3f,$0f,$ff,$ff,$ff,$ff,$ff,$ff,$f8,$fb,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $f9,$fb,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$3f,$ff,$ff,$ff,$ff,$ff,$ff
                        .byte $69,$50,$98,$6a,$5c,$43,$ff,$ff,$af,$bf,$0f,$33,$3f,$0f,$ff,$ff
                        .byte $f9,$fa,$f6,$f5,$f9,$f6,$f5,$f5,$03,$83,$23,$0b,$80,$a3,$2b,$88
                        .byte $ff,$ff,$ff,$ff,$ff,$3f,$ff,$ff,$f9,$f6,$f5,$f5,$f5,$f5,$f5,$f5
                        .byte $80,$a3,$2b,$88,$a0,$ab,$68,$98,$ff,$3f,$ff,$ff,$3f,$3f,$ff,$3f
                        .byte $56,$59,$5a,$58,$4a,$ff,$55,$55,$8f,$83,$43,$23,$0b,$ff,$57,$5b
                        .byte $ff,$ff,$ff,$ff,$ff,$ff,$55,$55,$ff,$ff,$ff,$ff,$ff,$ff,$57,$5b
                        .byte $ff,$ff,$55,$55,$55,$59,$56,$55,$ff,$ff,$57,$53,$8b,$43,$63,$ab
                        .byte $f5,$f5,$f5,$f5,$f5,$f5,$f5,$f5,$a0,$ab,$68,$98,$a4,$6a,$58,$96
                        .byte $3f,$3f,$ff,$3f,$3f,$3f,$57,$53,$f5,$f5,$f5,$f5,$f5,$f5,$55,$55
                        .byte $a4,$6a,$58,$94,$66,$5a,$54,$96,$3f,$3f,$bf,$3f,$3f,$bf,$bf,$3f
                        .byte $55,$59,$56,$59,$45,$f5,$f5,$f6,$55,$59,$58,$4a,$ff,$ff,$ff,$ff
                        .byte $4b,$63,$ab,$2b,$ff,$ff,$ff,$ff,$65,$59,$56,$55,$85,$a2,$e8,$fe
                        .byte $59,$5a,$56,$59,$9a,$68,$5c,$83,$66,$5a,$98,$aa,$42,$23,$0f,$ff
                        .byte $bf,$bf,$bf,$ff,$ff,$ff,$ff,$ff,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
                        .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00


*=$2800                 "4x4 screen matrix"
                        .byte $00,$01,$02,$03,$04,$05,$06,$07,$00,$08,$09,$0a,$04,$0b,$0c,$03
                        .byte $00,$08,$09,$0a,$00,$08,$09,$0a,$00,$08,$09,$0a,$04,$0d,$04,$0d
                        .byte $04,$0d,$04,$0b,$0e,$0f,$0c,$03,$10,$11,$12,$13,$14,$15,$16,$17
                        .byte $10,$18,$19,$19,$14,$1a,$14,$13,$10,$1b,$1c,$1d,$10,$1b,$1c,$1d
                        .byte $10,$18,$1e,$1f,$14,$21,$22,$1a,$14,$1a,$14,$1a,$14,$1a,$14,$13
                        .byte $23,$24,$23,$24,$23,$25,$26,$27,$28,$29,$2a,$2b,$23,$2c,$26,$2d
                        .byte $28,$29,$2a,$2b,$23,$24,$19,$19,$28,$29,$2e,$24,$23,$24,$23,$24
                        .byte $23,$24,$23,$24,$23,$24,$23,$24,$2f,$30,$31,$32,$2f,$33,$34,$35
                        .byte $36,$37,$38,$32,$2f,$33,$34,$35,$36,$37,$38,$32,$2f,$30,$19,$19
                        .byte $36,$37,$38,$32,$2f,$30,$31,$32,$2f,$30,$2f,$30,$31,$32,$31,$32
                        .byte $19,$19,$04,$0d,$04,$39,$04,$0d,$04,$0d,$19,$19,$04,$0f,$0c,$03
                        .byte $00,$3a,$0c,$03,$04,$05,$3b,$3c,$00,$3a,$0c,$03,$04,$05,$06,$07
                        .byte $3d,$3e,$3f,$0a,$40,$41,$0c,$03,$19,$42,$14,$1a,$14,$1b,$43,$17
                        .byte $14,$18,$19,$19,$14,$1a,$14,$13,$10,$1a,$14,$13,$14,$44,$45,$46
                        .byte $10,$47,$48,$13,$14,$15,$16,$17,$49,$4a,$4b,$4c,$19,$19,$14,$13
                        .byte $4d,$4e,$4f,$2d,$23,$24,$23,$24,$28,$29,$2a,$2b,$23,$24,$23,$24
                        .byte $28,$50,$26,$2d,$23,$24,$19,$19,$28,$51,$52,$53,$23,$54,$23,$24
                        .byte $4d,$55,$56,$57,$19,$19,$23,$24,$31,$38,$34,$35,$2f,$30,$31,$32
                        .byte $36,$37,$38,$32,$2f,$30,$31,$32,$36,$37,$34,$35,$2f,$30,$19,$19
                        .byte $36,$37,$58,$32,$2f,$30,$31,$32,$31,$38,$34,$35,$19,$19,$2f,$30
                        .byte $04,$0d,$04,$0d,$59,$5a,$5b,$5c,$04,$0d,$04,$0d,$04,$0d,$04,$39
                        .byte $04,$0d,$04,$39,$04,$0d,$40,$5d,$5e,$5f,$19,$19,$19,$19,$04,$0d
                        .byte $19,$04,$0d,$19,$19,$19,$19,$19,$14,$18,$14,$1a,$60,$61,$62,$63
                        .byte $14,$18,$14,$18,$14,$1a,$64,$65,$43,$17,$66,$67,$68,$69,$42,$6a
                        .byte $6b,$6c,$19,$19,$19,$19,$6d,$6e,$19,$6d,$6e,$19,$19,$19,$19,$19
                        .byte $28,$29,$4f,$2d,$6f,$70,$71,$72,$28,$29,$2e,$73,$4f,$2d,$23,$24
                        .byte $23,$24,$19,$23,$24,$19,$74,$75,$76,$2b,$4d,$2b,$4d,$2b,$4d,$2b
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$36,$37,$34,$35,$77,$78,$79,$19
                        .byte $36,$37,$38,$38,$34,$35,$2f,$30,$31,$32,$19,$31,$32,$19,$7a,$38
                        .byte $38,$32,$31,$32,$7b,$7c,$31,$32,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $04,$0d,$40,$7d,$7e,$7f,$40,$80,$81,$03,$82,$0d,$04,$0d,$04,$83
                        .byte $84,$0a,$00,$08,$3f,$0a,$40,$85,$86,$87,$88,$3a,$0c,$89,$3d,$3e
                        .byte $0e,$0d,$00,$3a,$0c,$03,$19,$19,$14,$1a,$8a,$8b,$8c,$8d,$8e,$8f
                        .byte $22,$13,$49,$90,$22,$1a,$91,$92,$93,$4c,$10,$94,$95,$96,$19,$97
                        .byte $98,$99,$9a,$9b,$9c,$9d,$49,$9e,$14,$1a,$10,$1a,$14,$13,$19,$19
                        .byte $23,$24,$9f,$a0,$a1,$2b,$4d,$4e,$4f,$2d,$19,$19,$23,$24,$4d,$55
                        .byte $4f,$57,$28,$50,$26,$2d,$19,$a2,$a3,$a4,$28,$50,$26,$2d,$19,$19
                        .byte $23,$24,$28,$50,$26,$2d,$19,$19,$2f,$30,$31,$38,$38,$32,$31,$38
                        .byte $34,$35,$19,$19,$31,$32,$31,$38,$34,$35,$36,$37,$34,$35,$19,$a5
                        .byte $a6,$a7,$36,$37,$34,$35,$19,$19,$31,$32,$36,$37,$34,$35,$19,$19
                        .byte $00,$3a,$a8,$19,$19,$a9,$0c,$03,$aa,$7d,$7e,$7f,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$10,$1a,$19,$19,$19,$19,$14,$13
                        .byte $19,$ab,$ac,$ad,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $28,$50,$ae,$19,$19,$af,$26,$2d,$19,$b0,$b1,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$36,$37,$b2,$19,$19,$b3,$34,$35
                        .byte $19,$b4,$b5,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19
                        .byte $19,$19,$19,$19,$19,$19,$19,$19
